<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Namestitev MeetPlan sistema na strežnik on MeetPlan dokumentacija</title><link>/namestitev/meetplan/</link><description>Recent content in Namestitev MeetPlan sistema na strežnik on MeetPlan dokumentacija</description><generator>Hugo -- gohugo.io</generator><language>sl-si</language><atom:link href="/namestitev/meetplan/index.xml" rel="self" type="application/rss+xml"/><item><title>Kloniranje MeetPlan repozitorija</title><link>/namestitev/meetplan/kloniranje/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/namestitev/meetplan/kloniranje/</guid><description>Super, ta korak bo najkrajši. Vse, kar morate narediti, je izvršiti naslednji ukaz: cd ~ &amp;amp;&amp;amp; git clone https://github.com/MeetPlan/MeetPlanDocker &amp;amp;&amp;amp; cd MeetPlanDocker
Pojdite na naslednji del.</description></item><item><title>Namestitev Docker orodij</title><link>/namestitev/meetplan/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/namestitev/meetplan/docker/</guid><description>Pa pojdimo nazaj na strežnik. Še vedno bi morali biti povezani nanj preko SSH programa, drugače pa ponovite postopek iz nastavitve vašega strežnika.
Prvo bomo posodobili apt repozitorije. Naredite naslednje: sudo apt update. Vprašalo vas bo za geslo.
Sedaj pa bomo namestili haveged. To poskrbi, da je sistemski &amp;ldquo;entropy&amp;rdquo; vedno visok, kar je potrebno za Docker. Namesti ta paket preko: sudo apt install haveged.
Izvrši (copy-paste) naslednje ukaze, ki namestijo Docker in docker-compose.</description></item><item><title>NGINX konfiguracija</title><link>/namestitev/meetplan/nginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/namestitev/meetplan/nginx/</guid><description>Odprite datoteko default.conf z nano urejevalnikom besedil - nano default.conf.
Zamenjajte VSE omembe example.com s svojo poddomeno, v mojemu primeru je to meetplan.meetplan.ml.
Morale bi biti 4 vrstice, ki vsebujejo to domeno, od tega dve vrstici server_name, ena ssl_certificate vrstica in ena ssl_certificate_key vrstica.
Končna konfiguracija bi morala izgledati nekako tako:
server { listen 80; listen [::]:80; server_name meetplan.meetplan.ml; location ~ /.well-known/acme-challenge { allow all; root /var/www/html; } location / { rewrite ^ https://$host$request_uri?</description></item><item><title>Pridobivanje SSL certifikata od Let's Encrypt organizacije</title><link>/namestitev/meetplan/letsencrypt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/namestitev/meetplan/letsencrypt/</guid><description>Vsaka spletna stran potrebuje SSL certifikat za čim večjo varnost, saj tako napadalci ne bodo mogli prestreči podatkov. Z SSL certifikatom se HTTP nadgradi v HTTPS.
Malo bomo morali spremeniti določene Docker konfiguracijske datoteke. Prvo bomo odprli initcert.sh datoteko z nano urejevalnikom besedil. Uporabite naslednji ukaz: nano initcert.sh.
nano je terminalski urejevalnik besedil. Po njem se ne premikate z miško, temveč s puščicami na tipkovnici. Pojdite do vrstice 3. Spremenite elektronski naslov (test@example.</description></item><item><title>Zagon MeetPlan sistema</title><link>/namestitev/meetplan/meetplan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/namestitev/meetplan/meetplan/</guid><description>Zaganjanje je preprosto - potrebujete samo en ukaz. Če se med zagonom javi kakršnakoli napaka, samo prekličite ukaz (z uporabo CTRL+C) in ga ponovno zaženite. Če tudi to ne pomaga, poskusite popolnoma ustaviti vse kontejnerje z sudo docker-compose down
sudo docker-compose up Prvi zagon se mora vedno zgoditi z zgornjim ukazom, ki sproti prikazuje vse izpise. Če bo vse delovalo (tudi če vtipkate poddomeno v brskalnik), pritisnite CTRL+C in počakajte na Dockerja, da ugasne vse kontejnerje, nakar lahko vse zaženete s pravim ukazom, ki bo vse poganjal v ozadju:</description></item></channel></rss>